@using OnlineStoreManager.Infracstructure;
@model OnlineStoreManager.Models.ViewModels.ProductIndexViewModel;
@inject IPageMaster PageMaster;


<style>
      .summary_card {
         padding: 1rem;
         /* background-color: white; */
         /* box-shadow: 5px 5px 10px 1px rgba(199, 199, 199, 0.589); */
         /* border-radius: 5px; */
         display: inline-block;
      }

         .summary_card .icon {
            width: 64px;
            height: 64px;
            background-color: rgb(44, 44, 44);
            border-radius: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
         }

            .summary_card .icon img {
               width: 50%;
               height: 50%;
            }

         .summary_card .summary > * {
            margin: 7px 14px;
         }

         .summary_card .summary .label {
            font-size: 14px;
            font-weight: 600;
            opacity: 0.5;
         }

         .summary_card .summary .text {
            font-size: 20px;
            font-weight: 600;
         }
   </style>
<div id="revenue-report">
   <div style="width: 1034px;background-color:#f5f5f5;padding: 2rem;">
      <div>
         <div style="font-weight: bold;font-size: 20px;text-transform: uppercase;
   padding:1rem;text-align: center;background-color:#9595f1">
            Báo cáo doanh thu
         </div>

         <div class="flex" style="width: 100%;box-sizing: border-box;padding: 1.25rem;
   background-color:#fafafa;">

            <!-- Bar chart -->
            <div style="display: block; width: 500px; height: 350px;">
               <canvas id="bar_chart" width="500" height="350" class="chartjs-render-monitor"></canvas>
            </div>

            <div class="flex_col flex-center" style="margin: auto;flex-direction: column;">

               <div class="summary_card">
                  <div class="flex flex-center">
                     <div class="icon" style="background-color:rgb(76, 179, 226);">
                        <img src="/icons/revenue.svg">
                     </div>

                     <div class="summary">
                        <span class="label">Doanh thu bán hàng</span>
                        <div id="revenue-summary" class="text" style="color: rgb(76, 179, 226);">
                           129,000,000 VND
                        </div>
                     </div>
                  </div>
               </div>

               <div class="summary_card">
                  <div class="flex flex-center">
                     <div class="icon" style="background-color: rgb(88, 216, 137);">
                        <img src="/icons/profit.svg">
                     </div>

                     <div class="summary">
                        <span class="label">Lợi nhuận bán hàng</span>
                        <div id="profit-summary" class="text" style="color: rgb(88, 216, 137);">
                           49,000,000 VND
                        </div>
                     </div>
                  </div>
               </div>

            </div>

            <!-- Circle Chart -->

         </div>
      </div>

      <div>
         <div style="font-weight: bold;font-size: 20px;text-transform: uppercase;
   padding:1rem;text-align: center;background-color:#9595f1">
            Doanh số bán hàng theo sản phẩm
         </div>

         <div class="flex align-center" style="justify-content: space-around;
width: 100%;box-sizing: border-box;padding: 1.25rem;
   background-color:#fafafa;">

            <!-- Bar chart -->
            <div style="display: block; width: 450px; height: 350px;">
               <canvas id="pie_chart" width="450" height="350" class="chartjs-render-monitor"></canvas>
            </div>

            <div id="product_grid" style="width:450px;min-height:350px;margin-left:1rem;">
            </div>
         </div>
      </div>

   </div>
</div>

<script hide>
   var toolbarItemStyle = 'margin: 0 3.5px;';
   var _toolbarItems1 = [
      {
         type: 'html',
         html: function () {
            var inpStyle = `margin: 0 3.5px;height: 28px!important;
               border: 1px solid #c5c5c5;border-radius: 4px;background-color:#f9f9f9;
               font-weight: bold;font-size: 13px;width:160px;`;
            return `
                  <input name="FromDate" type="date" style="${inpStyle}"
                     data-date="Từ: chưa chọn" />
            `;
         }
      },
      {
         type: 'html',
         html: function (item) {
            var inpStyle = `margin: 0 3.5px;height: 28px!important;
               border: 1px solid #c5c5c5;border-radius: 4px;background-color:#f9f9f9;
               font-weight: bold;font-size: 13px;width:160px;`;
            return `
                  <input name="ToDate" type="date" style="${inpStyle}"
                     data-date="Đến: chưa chọn"/>`;
         }
      },
      {
         type: 'html',
         html: function () {
            return `
                  <button class="_small_btn"
                     style="${toolbarItemStyle}"
                     onclick="REPORT_PAGE.onSelectDate()">Lọc
                  </button>`;
         },
      },
   ];
   $().w2toolbar({
      name: '_toolbar_top',
      style: 'height:50px;padding-top:11px;',
      items: _toolbarItems1.filter(p => {
         if (p.tabs)
            return p.tabs.find(p => p == '@ViewBag.TabName')
         return true;      // neu khong dinh nghia p.tabs, mac dinh la lay cho tat ca
      }),
      onRender: function (e) {
         e.onComplete = function () {
            // date picker
            function dateToString(date) {
               date = new Date(date);
               var dd = date.getDate();
               var mm = date.getMonth() + 1; //January is 0!
               var yyyy = date.getFullYear();
               if (dd < 10)
                  dd = '0' + dd
               if (mm < 10)
                  mm = '0' + mm
               return yyyy + '-' + mm + '-' + dd;
            }

            function formatDate(date) {
               date = new Date(date);
               var dd = date.getDate();
               var mm = date.getMonth() + 1; //January is 0!
               var yyyy = date.getFullYear();
               if (dd < 10)
                  dd = '0' + dd
               if (mm < 10)
                  mm = '0' + mm
               return dd + '-' + mm + '-' + yyyy;
            }

            var _fromDate = '@ViewBag.FromDate',_toDate = '@ViewBag.ToDate';
            // assign default value
            //
            $('input[name="FromDate"]').val(_fromDate);
            $('input[name="ToDate"]').val(_toDate);
            $('input[name="FromDate"]')
               .attr('data-date', 'Từ: ' + formatDate(_fromDate));
            $('input[name="ToDate"]')
               .attr('data-date', 'Đến: ' + formatDate(_toDate));

            // handle events
            $('input[name="FromDate"]').change(function (e) {

               var fromDate = $('input[name="FromDate"]').val(),
                  toDate = $('input[name="ToDate"]').val();

               $('input[name="FromDate"]')
                  .attr('data-date', 'Từ: ' + formatDate(fromDate));

               // nếu đã chọn toDate và toDate lại bé hơn toDate
               if (toDate && fromDate > toDate) {
                  $('input[name="ToDate"]').val(fromDate);
                  $('input[name="ToDate"]')
                     .attr('data-date', 'Đến: ' + formatDate(fromDate));
               }

               // đổi toDate.Year về = fromDate.Year
               var year = (new Date(fromDate)).getFullYear();
               var _toDate = new Date(toDate);
               _toDate.setFullYear(year);
               $('input[name="ToDate"]').val(dateToString(_toDate));
               $('input[name="ToDate"]')
                  .attr('data-date', 'Đến: ' + formatDate(_toDate));
            });

            $('input[name="ToDate"]').change(function (e) {
               var fromDate = $('input[name="FromDate"]').val(),
                  toDate = $('input[name="ToDate"]').val();

               if (!toDate)
                  return;

               $('input[name="ToDate"]')
                  .attr('data-date', 'Đến: ' + formatDate(toDate));

               // nếu đã chọn fromDate và fromDate lại lớn hơn toDate
               if (fromDate && toDate < fromDate) {
                  $('input[name="FromDate"]').val(toDate);
                  $('input[name="FromDate"]')
                     .attr('data-date', 'Từ: ' + formatDate(toDate));
               }

               // đổi fromDate.Year về = toDate.Year
               var year = (new Date(toDate)).getFullYear();
               var _fromDate = new Date(fromDate);
               _fromDate.setFullYear(year);
               $('input[name="FromDate"]').val(dateToString(_fromDate));
               $('input[name="FromDate"]')
                  .attr('data-date', 'Đến: ' + formatDate(_fromDate));
            });
         }
      }
   });

   var html = htmlToString('#revenue-report', true);
   $().w2layout({
      name: '_revenue_report',
      panels: [
         {
            type: 'top', size: 50, style: panelStyle,
         },
         {
            type: 'main', content: html, style: panelStyle
         },
      ]
   });

   w2ui['_revenue_report'].content('top', w2ui['_toolbar_top']);
   w2ui['_main_content'].content('main', w2ui['_revenue_report']);

   setTimeout(() => {
      REPORT_PAGE.renderRevenueReport(() => REPORT_PAGE.renderBestSellerReport());
   }, 500);
</script>


@section ViewScripts {
   <script hide src="~/lib/chartjs/Chart.min.js"></script>
   <script hide src="~/js/Views/Report/Index.js"></script>
}